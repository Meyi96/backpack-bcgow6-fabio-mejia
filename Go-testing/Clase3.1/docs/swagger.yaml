definitions:
  handler.Request:
    properties:
      age:
        type: integer
      email:
        type: string
      height:
        type: integer
      lastName:
        type: string
      name:
        type: string
    required:
    - age
    - email
    - height
    - lastName
    - name
    type: object
  handler.RequestUpdate:
    properties:
      active:
        type: boolean
      age:
        type: integer
      email:
        type: string
      height:
        type: integer
      lastName:
        type: string
      name:
        type: string
    required:
    - active
    - age
    - email
    - height
    - lastName
    - name
    type: object
  handler.RequestUpdateLastNameAndAge:
    properties:
      age:
        type: integer
      lastName:
        type: string
    required:
    - age
    - lastName
    type: object
  web.Response:
    properties:
      code:
        type: string
      data: {}
      error:
        type: string
    type: object
info:
  contact:
    name: API Support
    url: https://developers.mercadolibre.com.ar/support
  description: This API Handle MELI Users.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://developers.mercadolibre.com.ar/es_ar/terminos-y-condiciones
  title: MELI Bootcamp API
  version: "1.0"
paths:
  /users:
    get:
      description: get users
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Response'
      summary: List users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: store user
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: User to store
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/handler.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Response'
      summary: Store user
      tags:
      - Users
  /users/{id}:
    delete:
      description: delete user
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: User id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Response'
      summary: Delete user
      tags:
      - Users
    patch:
      consumes:
      - application/json
      description: update lastname and age user
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: User id
        in: path
        name: id
        required: true
        type: string
      - description: lastname and age to update
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/handler.RequestUpdateLastNameAndAge'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Response'
      summary: Update lastname and age user
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: update user
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: User id
        in: path
        name: id
        required: true
        type: string
      - description: User to update
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/handler.RequestUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Response'
      summary: Update user
      tags:
      - Users
swagger: "2.0"
